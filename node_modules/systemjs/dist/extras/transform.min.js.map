{"version":3,"sources":["transform.js"],"names":["global","systemJSPrototype","System","constructor","prototype","instantiate","url","parent","slice","call","this","loader","fetch","credentials","then","res","ok","Error","status","statusText","text","source","transform","eval","getRegister","_id","self"],"mappings":"CAWE,SAAWA,GACT,IAAIC,EAAoBD,EAAOE,OAAOC,YAAYC,UAE9CC,EAAcJ,EAAkBI,YACpCJ,EAAkBI,YAAc,SAAUC,EAAKC,GAC7C,GAAsB,UAAlBD,EAAIE,OAAO,GACb,OAAOH,EAAYI,KAAKC,KAAMJ,EAAKC,GAErC,IAAII,EAASD,KACb,OAAOE,MAAMN,EAAK,CAAEO,YAAa,gBAChCC,MAAK,SAAUC,GACd,IAAKA,EAAIC,GACP,MAAMC,OAAiB,gBAAkBF,EAAIG,OAAS,IAAMH,EAAII,YAAcZ,EAAS,iBAAmBA,EAAS,KApB1G,IAAM,oBAoBI,EApBlB,qEAqBH,OAAOQ,EAAIK,UAEZN,MAAK,SAAUO,GACd,OAAOV,EAAOW,UAAUb,KAAKC,KAAMJ,EAAKe,MAEzCP,MAAK,SAAUO,GAEd,OADA,EAAIE,MAAMF,EAAS,mBAAqBf,GACjCK,EAAOa,YAAYlB,OAK9BL,EAAkBqB,UAAY,SAAUG,EAAKJ,GAC3C,OAAOA,GA1BX,CA4BmB,oBAATK,KAAuBA,KAAO1B","file":"##.min.js","sourcesContent":["(function () {\n\n  function errMsg(errCode, msg) {\n    return (msg || \"\") + \" (SystemJS Error#\" + errCode + \" \" + \"https://github.com/systemjs/systemjs/blob/main/docs/errors.md#\" + errCode + \")\";\n  }\n\n  /*\n   * Support for a \"transform\" loader interface\n   *\n   * Note: This extra is deprecated and will be removed in the next major.\n   */\n  (function (global) {\n    var systemJSPrototype = global.System.constructor.prototype;\n\n    var instantiate = systemJSPrototype.instantiate;\n    systemJSPrototype.instantiate = function (url, parent) {\n      if (url.slice(-5) === '.wasm')\n        return instantiate.call(this, url, parent);\n\n      var loader = this;\n      return fetch(url, { credentials: 'same-origin' })\n      .then(function (res) {\n        if (!res.ok)\n          throw Error(errMsg(7,  'Fetch error: ' + res.status + ' ' + res.statusText + (parent ? ' loading from ' + parent : '')));\n        return res.text();\n      })\n      .then(function (source) {\n        return loader.transform.call(this, url, source);\n      })\n      .then(function (source) {\n        (0, eval)(source + '\\n//# sourceURL=' + url);\n        return loader.getRegister(url);\n      });\n    };\n\n    // Hookable transform function!\n    systemJSPrototype.transform = function (_id, source) {\n      return source;\n    };\n  })(typeof self !== 'undefined' ? self : global);\n\n}());\n"]}